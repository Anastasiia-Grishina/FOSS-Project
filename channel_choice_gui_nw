#!/bin/sh
# GUI and network implementation

# Network variables declaration
HOST=localhost
PORT=1234

# Temporary files indexed with process id
FILE1=/tmp/channel-choice-1-$$
FILE2=/tmp/channel-choice-2-$$
ERROR=/tmp/channel-choice-err-$$

# Localization auxiliary variable
GETTEXT="gettext -d channel_choice_gui_nw"

# Warn user if the file with get request is not installed
missing_prog () {
	echo "`$GETTEXT \"Please, run 'make' before executing the program.\"`"
	exit 1
}

# Clean temporary files before exit
end () {
	printf "\\n`$GETTEXT \"Exit. Cleaning the error and output files.\"`\\n\\n"
	rm -rf $FILE1 $ERROR
	exit 0
} 

# Display error occurrence
error_msg() {
	TITLE="`$GETTEXT \"Error\"`" 
	MSG="`\$GETTEXT \"Error. Try again?\"`"
	$DIALOG --title "$TITLE" --yesno "$MSG" 100 60 || end
}

# Source for dialog menu (user interface)  
MENU_H="`$GETTEXT \"Please, choose a channel option\"`" 
MENU_1="`$GETTEXT \"Unencrypted channel\"`"
MENU_2="`$GETTEXT \"Encrypted channel\"`"
MENU_0="`$GETTEXT \"Exit\"`"


# Catch interruption and exit safely with memory release
trap end SIGINT

# Check if main file exists
which channel_choice 2> /dev/null && CHANNEL_CHOICE_CMD=channel_choice || missing_prog

# In case of network version - connect via nc
if [ `basename $0` = "channel_choice_nw" ]
then
	CHANNEL_CHOICE_CMD="nc $HOST $PORT" 2> $ERROR
fi

# User interface input 
while true
do
	# Use gdialog or dialog depending on what is installed on the user side
	which gdialog 2> /dev/null && DIALOG=gdialog || DIALOG=dialog

	# Read user choice after printing the menu
	$DIALOG --menu "$MENU" 10 60 2 1 "$MENU_1" 2 "$MENU_2" 2> $FILE1 || end
	USER_CHOICE=`cat $FILE1`

		
	# Confirm choice of channel and call executable with request
	MSG="`$GETTEXT \"Switch channel to \"` $USER_CHOICE?"
	INPUT=0
	$DIALOG --yesno "$MSG" 100 60 && INPUT=1 
	if [ "$INPUT" -eq 1 ]
	then
		if echo $USER_CHOICE | $CHANNEL_CHOICE_CMD > $FILE2 2> $ERROR
		then
			MSG="`\$GETTEXT \"You have switched to channel \"` $USER_CHOICE"." `\$GETTEXT \"Try again?\"`"
			$DIALOG --yesno "$MSG" 100 60 || end
		else
			error_msg
		fi
	fi
done
